[{"/home/gauss/Desktop/ros-statuspage/src/index.tsx":"1","/home/gauss/Desktop/ros-statuspage/src/Sites/IndexSite.tsx":"2","/home/gauss/Desktop/ros-statuspage/src/Components/NavBar.tsx":"3","/home/gauss/Desktop/ros-statuspage/src/Network/Api.ts":"4","/home/gauss/Desktop/ros-statuspage/src/Network/Fetch.ts":"5","/home/gauss/Desktop/ros-statuspage/src/Stores/SelectionStore.ts":"6","/home/gauss/Desktop/ros-statuspage/src/Components/ChartLoader.tsx":"7","/home/gauss/Desktop/ros-statuspage/src/Components/ChartComponent.tsx":"8"},{"size":245,"mtime":1611001703437,"results":"9","hashOfConfig":"10"},{"size":261,"mtime":1611049948604,"results":"11","hashOfConfig":"10"},{"size":892,"mtime":1611074901638,"results":"12","hashOfConfig":"10"},{"size":437,"mtime":1611002783662,"results":"13","hashOfConfig":"10"},{"size":843,"mtime":1611005797125,"results":"14","hashOfConfig":"10"},{"size":160,"mtime":1611006052414,"results":"15","hashOfConfig":"10"},{"size":846,"mtime":1611074739063,"results":"16","hashOfConfig":"10"},{"size":1154,"mtime":1611071142051,"results":"17","hashOfConfig":"10"},{"filePath":"18","messages":"19","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},"1ke12hu",{"filePath":"21","messages":"22","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},{"filePath":"23","messages":"24","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"25","messages":"26","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},{"filePath":"27","messages":"28","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},{"filePath":"29","messages":"30","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"31"},{"filePath":"32","messages":"33","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"34","usedDeprecatedRules":"20"},{"filePath":"35","messages":"36","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"37","usedDeprecatedRules":"20"},"/home/gauss/Desktop/ros-statuspage/src/index.tsx",[],["38","39"],"/home/gauss/Desktop/ros-statuspage/src/Sites/IndexSite.tsx",[],"/home/gauss/Desktop/ros-statuspage/src/Components/NavBar.tsx",["40","41"],"/home/gauss/Desktop/ros-statuspage/src/Network/Api.ts",[],"/home/gauss/Desktop/ros-statuspage/src/Network/Fetch.ts",[],"/home/gauss/Desktop/ros-statuspage/src/Stores/SelectionStore.ts",[],["42","43"],"/home/gauss/Desktop/ros-statuspage/src/Components/ChartLoader.tsx",["44"],"import * as React from \"react\"\nimport { API } from \"../Network/Api\"\nimport { selectionStore } from \"../Stores/SelectionStore\"\nimport { ChartComponent } from \"./ChartComponent\"\n\nexport const ChartLoader = () => {\n\n    const [services, setServices] = React.useState<string[] | null>(null)\n\n    const GetServices = async () => {\n        try {\n            const response = await API.GetServices()\n            if(response.status) setServices(response.services)\n        }\n        catch(err) {\n\n        }\n    }\n\n    React.useEffect(() => {\n        GetServices()\n    }, [])\n\n    return (\n        <div className=\"flex-column content-center mx-8 my-20\">\n            {services && services.map(value => {\n                return (\n                    <ChartComponent service={value} key={value} />\n                )\n            })}\n        </div>\n    )\n    \n}","/home/gauss/Desktop/ros-statuspage/src/Components/ChartComponent.tsx",["45"],"import 'chart.js'\nimport * as React from \"react\"\nimport { API } from \"../Network/Api\"\n\nconst { LineChart } = require('react-chartkick')\n\nexport const ChartComponent = (props: {\n    service: string\n}) => {\n\n    const [chartData, setChartData] = React.useState<{timestamp: number; up: boolean}[] | null>(null)\n\n    const LoadServiceChartData = async () => {\n        try {\n            const response = await API.GetCharts(props.service)\n            if(response.status) setChartData(response.charts)\n            \n        }\n        catch(err) {\n\n        }\n    }\n\n    React.useEffect(() => {\n        LoadServiceChartData()\n    }, [])\n\n    return (\n        <div className=\"max-w-full mx-auto\">\n            {chartData && (\n                <>\n                <h1 className=\"text-2xl align-middle\">{new URL(props.service).hostname}</h1>\n                <LineChart \n                    data={chartData.reduce((result: any, item, index) => {\n                        result[String(new Date(item.timestamp))] = item.up ? 1 : 0\n                        return result\n                    }, {})}\n                />\n               </>\n            )}\n        </div>\n    )\n}",{"ruleId":"46","replacedBy":"47"},{"ruleId":"48","replacedBy":"49"},{"ruleId":"50","severity":1,"message":"51","line":13,"column":29,"nodeType":"52","endLine":13,"endColumn":157},{"ruleId":"50","severity":1,"message":"51","line":14,"column":29,"nodeType":"52","endLine":14,"endColumn":126},{"ruleId":"46","replacedBy":"53"},{"ruleId":"48","replacedBy":"54"},{"ruleId":"55","severity":1,"message":"56","line":3,"column":10,"nodeType":"57","messageId":"58","endLine":3,"endColumn":24},{"ruleId":"59","severity":1,"message":"60","line":26,"column":8,"nodeType":"61","endLine":26,"endColumn":10,"suggestions":"62"},"no-native-reassign",["63"],"no-negated-in-lhs",["64"],"jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement",["63"],["64"],"@typescript-eslint/no-unused-vars","'selectionStore' is defined but never used.","Identifier","unusedVar","react-hooks/exhaustive-deps","React Hook React.useEffect has a missing dependency: 'LoadServiceChartData'. Either include it or remove the dependency array.","ArrayExpression",["65"],"no-global-assign","no-unsafe-negation",{"desc":"66","fix":"67"},"Update the dependencies array to be: [LoadServiceChartData]",{"range":"68","text":"69"},[624,626],"[LoadServiceChartData]"]